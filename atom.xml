<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yangsoon</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yangsoon.github.io/"/>
  <updated>2017-11-09T12:50:38.000Z</updated>
  <id>https://yangsoon.github.io/</id>
  
  <author>
    <name>yangs</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vagrant开发遇到的坑</title>
    <link href="https://yangsoon.github.io/2017/10/01/vagrant%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E5%9D%91/"/>
    <id>https://yangsoon.github.io/2017/10/01/vagrant开发遇到的坑/</id>
    <published>2017-10-01T04:39:35.000Z</published>
    <updated>2017-11-09T12:50:38.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="npm-EPROTO-protocol-error-symlink"><a href="#npm-EPROTO-protocol-error-symlink" class="headerlink" title="npm EPROTO: protocol error, symlink"></a>npm EPROTO: protocol error, symlink</h2><p>在虚拟机下初始化js项目时，开始会执行 <code>npm install</code>这时候经常会遇到这样的错误，原因是windows和linux在符号链接上有不同的定义和实现。</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><p><code>npm install --no-bin-links</code></p><h2 id="webpack-dev-server-不能热更新"><a href="#webpack-dev-server-不能热更新" class="headerlink" title="webpack-dev-server 不能热更新"></a>webpack-dev-server 不能热更新</h2><a id="more"></a><p>在使用webpack进行前端开发时，使用起来最方便的应该是webpack的热更新了，但是在vagrant下我们会发现webpack不能进行热更新。在<a href="https://en.wikipedia.org/wiki/Inotify" target="_blank" rel="external">wiki</a>中有这样一段话。</p><blockquote><p>Notification via inotify requires the kernel to be aware of all relevant filesystem events, which is not always possible for networked filesystems such as NFS …</p></blockquote><p>大概意思是对于类似NFS这样的网络系统文件，文件的变化并不总是能够成功的通知到变化。好在这并没有宣布彻底放弃当前方案，后面有人给出了方案:</p><h4 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h4><p><code>watchOptions: { poll: true }</code></p><p>我们可以使用webpack –watch –color,设置poll属性，Webpack会在100毫秒左右内检测文件更新，随时build。</p><h2 id="npm安装的全局应用command-not-found"><a href="#npm安装的全局应用command-not-found" class="headerlink" title="npm安装的全局应用command not found"></a>npm安装的全局应用<code>command not found</code></h2><p>当我们使用npm安装一些js应用(vue-cli、webpack、supervisor)时，执行相应的命令的时候，经常因为路径问题出现命令找不到的情况，有时候根据情况不同，解决方案也会有多种。在这里我给大家推荐使用<a href="https://yarnpkg.com/zh-Hans/" target="_blank" rel="external">yarn</a>安装一些node包。</p><h4 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h4><h4 id="1-Ubuntu下安装yarn"><a href="#1-Ubuntu下安装yarn" class="headerlink" title="1.Ubuntu下安装yarn"></a>1.Ubuntu下安装yarn</h4><p><code>sudo apt-get update &amp;&amp; sudo apt-get install yarn</code></p><h4 id="2-使用yarn安装全局node包"><a href="#2-使用yarn安装全局node包" class="headerlink" title="2.使用yarn安装全局node包"></a>2.使用yarn安装全局node包</h4><p><code>yarn global add &lt;package...&gt;</code></p><p>更多命令查看<a href="https://yarnpkg.com/zh-Hans/docs/cli/" target="_blank" rel="external">文档</a></p><h2 id="最终方案"><a href="#最终方案" class="headerlink" title="最终方案"></a>最终方案</h2><div class="tip"><br>这些主要是在进行前端开发的时候遇到的一些问题，但是经过一些折腾之后，我觉得最好的解决方案就是不要用虚拟机进行前端开发。实践证明，前端开发不一定要追求linux环境。如果想更快的学习前端知识，远离虚拟机。<br></div><p>参考文章<br><a href="http://www.jackpu.com/shi-yong-vagrant-he-webpackkai-fa-cai-guo-de-keng/?utm_source=tuicool&amp;utm_medium=referral" target="_blank" rel="external">使用Vagrant + webpack开发踩过的坑</a><br><a href="https://blog.wangboyang.com/npm-eproto-protocol-error-symlink/" target="_blank" rel="external">npm EPROTO: protocol error, symlink</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;npm-EPROTO-protocol-error-symlink&quot;&gt;&lt;a href=&quot;#npm-EPROTO-protocol-error-symlink&quot; class=&quot;headerlink&quot; title=&quot;npm EPROTO: protocol error, symlink&quot;&gt;&lt;/a&gt;npm EPROTO: protocol error, symlink&lt;/h2&gt;&lt;p&gt;在虚拟机下初始化js项目时，开始会执行 &lt;code&gt;npm install&lt;/code&gt;这时候经常会遇到这样的错误，原因是windows和linux在符号链接上有不同的定义和实现。&lt;/p&gt;
&lt;h4 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h4&gt;&lt;p&gt;&lt;code&gt;npm install --no-bin-links&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&quot;webpack-dev-server-不能热更新&quot;&gt;&lt;a href=&quot;#webpack-dev-server-不能热更新&quot; class=&quot;headerlink&quot; title=&quot;webpack-dev-server 不能热更新&quot;&gt;&lt;/a&gt;webpack-dev-server 不能热更新&lt;/h2&gt;
    
    </summary>
    
    
      <category term="vagrant" scheme="https://yangsoon.github.io/tags/vagrant/"/>
    
      <category term="webpack" scheme="https://yangsoon.github.io/tags/webpack/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://yangsoon.github.io/2017/09/30/hello-world/"/>
    <id>https://yangsoon.github.io/2017/09/30/hello-world/</id>
    <published>2017-09-30T05:48:55.000Z</published>
    <updated>2017-09-30T05:48:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
